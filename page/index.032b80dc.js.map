{"mappings":"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","sources":["<anon>","src/arabic-repair.ts","src/utilities/index.ts","src/utilities/string-ext.ts","src/utilities/utilz.ts"],"sourcesContent":["const $bf026db31fabae7c$export$ee005641a7f31a62 = [\n    [\n        0x0600,\n        0x06FF\n    ],\n    [\n        0xFB50,\n        0xFDFF\n    ],\n    [\n        0xFE70,\n        0xFEFF\n    ],\n    [\n        0x0750,\n        0x077F\n    ]\n];\nfunction $bf026db31fabae7c$export$4dbc080acc2672fc(charCode) {\n    return charCode >= 0x0600 && charCode <= 0x06FF || charCode >= 0xFB50 && charCode <= 0xFDFF || charCode >= 0xFE70 && charCode <= 0xFEFF || charCode >= 0x0750 && charCode <= 0x077F;\n}\nfunction $bf026db31fabae7c$export$61fc7d43ac8f84b0(func, interval) {\n    let lastCall = -1;\n    return function() {\n        clearTimeout(lastCall);\n        let args = arguments;\n        let self = this;\n        lastCall = setTimeout(function() {\n            func.apply(self, args);\n        }, interval);\n    };\n}\nfunction $bf026db31fabae7c$export$824f550c37fa98e4(url, ondone) {\n    let client = new XMLHttpRequest();\n    client.open(\"GET\", url);\n    client.onload = function() {\n        ondone(this.responseText, this);\n    };\n    client.send();\n}\n\n\nString.prototype.reverse = function() {\n    return this.split(\"\").reverse().join(\"\");\n};\nString.prototype.toChar = function(index) {\n    if (index != undefined) return this.charCodeAt(index);\n    return this.charCodeAt(0);\n};\nString.prototype.isArabicChar = function(index) {\n    if (index != undefined) return (0, $bf026db31fabae7c$export$4dbc080acc2672fc)(this[index].toChar(index));\n    return (0, $bf026db31fabae7c$export$4dbc080acc2672fc)(this.toChar(0));\n};\nString.prototype.hasArabic = function() {\n    for(let i = 0; i < this.length; i++){\n        if (this.isArabicChar(i)) return true;\n    }\n    return false;\n};\nNumber.prototype.isArabicChar = function() {\n    return (0, $bf026db31fabae7c$export$4dbc080acc2672fc)(this);\n};\n\n\n\n\n\nconst $cc8f15203ee8b20e$var$splitter_regexp = /([\\u0600-\\u06FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF\\u0750-\\u077F\\s\\/\\\\])/gu;\nconst $cc8f15203ee8b20e$var$space_remover_regexp = /[ \\t]+/gu;\nconst $cc8f15203ee8b20e$var$line_remover_regexp = /[\\n\\r]+/gu;\nlet $cc8f15203ee8b20e$var$pp = {\n    input: HTMLTextAreaElement,\n    output: HTMLTextAreaElement,\n    space_remove: HTMLInputElement,\n    line_remove: HTMLInputElement\n};\nfunction $cc8f15203ee8b20e$var$onTextChanged(ev) {\n    let txt = $cc8f15203ee8b20e$var$pp.input.value;\n    if ($cc8f15203ee8b20e$var$pp.space_remove.checked) txt = txt.replace($cc8f15203ee8b20e$var$space_remover_regexp, \" \");\n    if ($cc8f15203ee8b20e$var$pp.line_remove.checked) txt = txt.replace($cc8f15203ee8b20e$var$line_remover_regexp, \"\\n\");\n    let lines = txt.split(\"\\n\");\n    for(let i = 0; i < lines.length; i++){\n        if (lines[i].length <= 1) continue;\n        lines[i] = lines[i].reverse();\n        let contexts = lines[i].split($cc8f15203ee8b20e$var$splitter_regexp);\n        if (contexts == null) continue;\n        for(let j = 0; j < contexts.length; j++)if (!contexts[j].isArabicChar() && contexts[j].length > 1) contexts[j] = contexts[j].reverse();\n        lines[i] = contexts.join(\"\");\n    }\n    $cc8f15203ee8b20e$var$pp.output.value = lines.join(\"\\n\");\n}\nwindow.addEventListener(\"load\", (ev)=>{\n    $cc8f15203ee8b20e$var$pp.input = document.getElementById(\"textinput\");\n    $cc8f15203ee8b20e$var$pp.output = document.getElementById(\"textoutput\");\n    $cc8f15203ee8b20e$var$pp.space_remove = document.getElementById(\"option_remove_spaces\");\n    $cc8f15203ee8b20e$var$pp.line_remove = document.getElementById(\"option_remove_newlines\");\n    $cc8f15203ee8b20e$var$pp.input.addEventListener(\"input\", (0, $bf026db31fabae7c$export$61fc7d43ac8f84b0)($cc8f15203ee8b20e$var$onTextChanged, 500));\n    $cc8f15203ee8b20e$var$pp.space_remove.addEventListener(\"input\", (0, $bf026db31fabae7c$export$61fc7d43ac8f84b0)($cc8f15203ee8b20e$var$onTextChanged, 500));\n    $cc8f15203ee8b20e$var$pp.line_remove.addEventListener(\"input\", (0, $bf026db31fabae7c$export$61fc7d43ac8f84b0)($cc8f15203ee8b20e$var$onTextChanged, 500));\n    document.getElementById(\"copyToClipboard\").onclick = async function() {\n        await navigator.clipboard.writeText($cc8f15203ee8b20e$var$pp.output.value);\n    };\n    document.getElementById(\"pasteFromClipboard\").onclick = async function() {\n        $cc8f15203ee8b20e$var$pp.input.value = await navigator.clipboard.readText();\n    };\n    document.getElementById(\"loadTestText\").onclick = async function() {\n        (0, $bf026db31fabae7c$export$824f550c37fa98e4)(\"./test.html\", (text, request)=>{\n            $cc8f15203ee8b20e$var$pp.input.value = text;\n            $cc8f15203ee8b20e$var$onTextChanged(null);\n        });\n    };\n});\n\n\n//# sourceMappingURL=index.032b80dc.js.map\n","import \"./utilities\"\r\nimport {debounce, downloadText} from \"./utilities/utilz\";\r\n\r\nconst splitter_regexp = /([\\u0600-\\u06FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF\\u0750-\\u077F\\s\\/\\\\])/gu\r\nconst space_remover_regexp = /[ \\t]+/gu\r\nconst line_remover_regexp = /[\\n\\r]+/gu\r\n\r\nlet pp = {\r\n    input: HTMLTextAreaElement,\r\n    output: HTMLTextAreaElement,\r\n    space_remove: HTMLInputElement,\r\n    line_remove: HTMLInputElement\r\n}\r\n\r\nfunction onTextChanged(ev: Event) {\r\n    let txt = pp.input.value;\r\n\r\n    if (pp.space_remove.checked) {\r\n        txt = txt.replace(space_remover_regexp, \" \");\r\n    }\r\n\r\n    if (pp.line_remove.checked) {\r\n        txt = txt.replace(line_remover_regexp, \"\\n\");\r\n    }\r\n\r\n    let lines = txt.split(\"\\n\");\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        if (lines[i].length <= 1) continue;\r\n        lines[i] = lines[i].reverse();\r\n        let contexts = lines[i].split(splitter_regexp);\r\n        if (contexts == null) continue;\r\n        for (let j = 0; j < contexts.length; j++) {\r\n            if (!contexts[j].isArabicChar() && contexts[j].length > 1) {\r\n                contexts[j] = contexts[j].reverse();\r\n            }\r\n        }\r\n        lines[i] = contexts.join(\"\");\r\n    }\r\n\r\n    pp.output.value = lines.join(\"\\n\");\r\n}\r\n\r\nwindow.addEventListener(\"load\", ev => {\r\n    pp.input = document.getElementById(\"textinput\") as HTMLTextAreaElement;\r\n    pp.output = document.getElementById(\"textoutput\") as HTMLTextAreaElement;\r\n    pp.space_remove = document.getElementById(\"option_remove_spaces\") as HTMLInputElement;\r\n    pp.line_remove = document.getElementById(\"option_remove_newlines\") as HTMLInputElement;\r\n\r\n    pp.input.addEventListener(\"input\", debounce(onTextChanged, 500));\r\n    pp.space_remove.addEventListener(\"input\", debounce(onTextChanged, 500));\r\n    pp.line_remove.addEventListener(\"input\", debounce(onTextChanged, 500));\r\n\r\n    document.getElementById(\"copyToClipboard\").onclick = async function () {\r\n        await navigator.clipboard.writeText(pp.output.value);\r\n    }\r\n\r\n    document.getElementById(\"pasteFromClipboard\").onclick = async function () {\r\n        pp.input.value = await navigator.clipboard.readText();\r\n    }\r\n\r\n    document.getElementById(\"loadTestText\").onclick = async function () {\r\n        downloadText(\"./test.html\", (text, request) => {\r\n            pp.input.value = text;\r\n            onTextChanged(null);\r\n        });\r\n\r\n    }\r\n});\r\n\r\n","import \"./string-ext.ts\";","import \"./utilz\"\r\nimport {isInArabicRange} from \"./utilz\";\r\n\r\nexport {}\r\ndeclare global {\r\n    interface String {\r\n        reverse(): string;\r\n        isArabicChar(index?: number): boolean;\r\n        toChar(index?: number): number;\r\n        hasArabic(): boolean;\r\n    }\r\n\r\n    interface Number {\r\n        isArabicChar(): boolean;\r\n    }\r\n}\r\n\r\n\r\nString.prototype.reverse = function (): string {\r\n    return this.split(\"\").reverse().join(\"\");\r\n}\r\n\r\nString.prototype.toChar = function (index?: number): number {\r\n    if (index != undefined) {\r\n        return this.charCodeAt(index);\r\n    }\r\n    return this.charCodeAt(0);\r\n}\r\n\r\nString.prototype.isArabicChar = function (index?: number | undefined): boolean {\r\n    if (index != undefined) {\r\n        return isInArabicRange(this[index].toChar(index));\r\n    }\r\n    return isInArabicRange(this.toChar(0));\r\n}\r\n\r\nString.prototype.hasArabic = function (): boolean {\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (this.isArabicChar(i)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nNumber.prototype.isArabicChar = function () {\r\n    return isInArabicRange(this);\r\n}","export const arabic_ranges = [[0x0600, 0x06FF], [0xFB50, 0xFDFF], [0xFE70, 0xFEFF], [0x0750, 0x077F]];\r\n\r\nexport function isInArabicRange(charCode: number): boolean {\r\n    return (charCode >= 0x0600 && charCode <= 0x06FF)\r\n        || (charCode >= 0xFB50 && charCode <= 0xFDFF)\r\n        || (charCode >= 0xFE70 && charCode <= 0xFEFF)\r\n        || (charCode >= 0x0750 && charCode <= 0x077F);\r\n}\r\n\r\nexport function debounce(func: Function, interval: number) {\r\n    let lastCall = -1;\r\n    return function () {\r\n        clearTimeout(lastCall);\r\n        let args = arguments;\r\n        let self = this;\r\n        lastCall = setTimeout(function () {\r\n            func.apply(self, args);\r\n        }, interval);\r\n    };\r\n}\r\n\r\nexport function downloadText(url: string, ondone: (text: string, request: XMLHttpRequest) => void) {\r\n    let client = new XMLHttpRequest();\r\n    client.open('GET', url);\r\n    client.onload = function () {\r\n        ondone(this.responseText, this);\r\n    }\r\n    client.send();\r\n}"],"names":["$bf026db31fabae7c$export$4dbc080acc2672fc","charCode","$bf026db31fabae7c$export$61fc7d43ac8f84b0","func","interval","lastCall","clearTimeout","args","arguments","self","setTimeout","apply","String","prototype","reverse","split","join","toChar","index","undefined","charCodeAt","isArabicChar","hasArabic","i","length","Number","$cc8f15203ee8b20e$var$splitter_regexp","$cc8f15203ee8b20e$var$space_remover_regexp","$cc8f15203ee8b20e$var$line_remover_regexp","$cc8f15203ee8b20e$var$pp","input","HTMLTextAreaElement","output","space_remove","HTMLInputElement","line_remove","$cc8f15203ee8b20e$var$onTextChanged","ev","txt","value","checked","replace","lines","contexts","j","window","addEventListener","document","getElementById","onclick","navigator","clipboard","writeText","readText","ondone","client","text","request","XMLHttpRequest","open","onload","responseText","send"],"version":3,"file":"index.032b80dc.js.map"}